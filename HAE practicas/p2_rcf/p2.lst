;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/02/2019 11:33:20
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF0E  	GOTO        28
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_main:
;p2.c,1 :: 		void main() {
;p2.c,2 :: 		char d,u,i=0;
0x001C	0x6A15      	CLRF        main_i_L0 
0x001E	0x0E3F      	MOVLW       63
0x0020	0x6E16      	MOVWF       main_numeros_L0 
0x0022	0x0E06      	MOVLW       6
0x0024	0x6E17      	MOVWF       main_numeros_L0+1 
0x0026	0x0E5B      	MOVLW       91
0x0028	0x6E18      	MOVWF       main_numeros_L0+2 
0x002A	0x0E4F      	MOVLW       79
0x002C	0x6E19      	MOVWF       main_numeros_L0+3 
0x002E	0x0E66      	MOVLW       102
0x0030	0x6E1A      	MOVWF       main_numeros_L0+4 
0x0032	0x0E6D      	MOVLW       109
0x0034	0x6E1B      	MOVWF       main_numeros_L0+5 
0x0036	0x0E7D      	MOVLW       125
0x0038	0x6E1C      	MOVWF       main_numeros_L0+6 
0x003A	0x0E07      	MOVLW       7
0x003C	0x6E1D      	MOVWF       main_numeros_L0+7 
0x003E	0x0E7F      	MOVLW       127
0x0040	0x6E1E      	MOVWF       main_numeros_L0+8 
0x0042	0x0E67      	MOVLW       103
0x0044	0x6E1F      	MOVWF       main_numeros_L0+9 
;p2.c,4 :: 		ADCON1=0x07;
0x0046	0x0E07      	MOVLW       7
0x0048	0x6EC1      	MOVWF       ADCON1 
;p2.c,6 :: 		TRISA.B0=0;
0x004A	0x9092      	BCF         TRISA, 0 
;p2.c,7 :: 		TRISA.B1=0;
0x004C	0x9292      	BCF         TRISA, 1 
;p2.c,8 :: 		TRISD=0;
0x004E	0x6A95      	CLRF        TRISD 
;p2.c,10 :: 		while(1){
L_main0:
;p2.c,11 :: 		for(d=0;d<6;d++){
0x0050	0x6A01      	CLRF        R1 
L_main2:
0x0052	0x0E06      	MOVLW       6
0x0054	0x5C01      	SUBWF       R1, 0 
0x0056	0xE23A      	BC          L_main3
;p2.c,12 :: 		for(u=0;u<10;u++){
0x0058	0x6A02      	CLRF        R2 
L_main5:
0x005A	0x0E0A      	MOVLW       10
0x005C	0x5C02      	SUBWF       R2, 0 
0x005E	0xE234      	BC          L_main6
;p2.c,13 :: 		for(i=0;i<25;i++){
0x0060	0x6A15      	CLRF        main_i_L0 
L_main8:
0x0062	0x0E19      	MOVLW       25
0x0064	0x5C15      	SUBWF       main_i_L0, 0 
0x0066	0xE22E      	BC          L_main9
;p2.c,14 :: 		PORTD=numeros[u];     //numero de unidades deseado al puerto D
0x0068	0x0E16      	MOVLW       main_numeros_L0
0x006A	0x6EE9      	MOVWF       FSR0L 
0x006C	0x0E00      	MOVLW       hi_addr(main_numeros_L0)
0x006E	0x6EEA      	MOVWF       FSR0H 
0x0070	0x5002      	MOVF        R2, 0 
0x0072	0x26E9      	ADDWF       FSR0L, 1 
0x0074	0xB0D8      	BTFSC       STATUS, 0 
0x0076	0x2AEA      	INCF        FSR0H, 1 
0x0078	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;p2.c,15 :: 		PORTA.B0=1;           //Encendemos display de unidades
0x007C	0x8080      	BSF         PORTA, 0 
;p2.c,16 :: 		delay_ms(20);         //50T=> 20ms mostrando el valor de unidades
0x007E	0x0E34      	MOVLW       52
0x0080	0x6E0C      	MOVWF       R12, 0
0x0082	0x0EF1      	MOVLW       241
0x0084	0x6E0D      	MOVWF       R13, 0
L_main11:
0x0086	0x2E0D      	DECFSZ      R13, 1, 0
0x0088	0xD7FE      	BRA         L_main11
0x008A	0x2E0C      	DECFSZ      R12, 1, 0
0x008C	0xD7FC      	BRA         L_main11
0x008E	0x0000      	NOP
0x0090	0x0000      	NOP
;p2.c,17 :: 		PORTA.B0=0;           //Apagamos display de unidades
0x0092	0x9080      	BCF         PORTA, 0 
;p2.c,19 :: 		PORTD=numeros[d];     //numero de decenas deseado al puerto D
0x0094	0x0E16      	MOVLW       main_numeros_L0
0x0096	0x6EE9      	MOVWF       FSR0L 
0x0098	0x0E00      	MOVLW       hi_addr(main_numeros_L0)
0x009A	0x6EEA      	MOVWF       FSR0H 
0x009C	0x5001      	MOVF        R1, 0 
0x009E	0x26E9      	ADDWF       FSR0L, 1 
0x00A0	0xB0D8      	BTFSC       STATUS, 0 
0x00A2	0x2AEA      	INCF        FSR0H, 1 
0x00A4	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;p2.c,20 :: 		PORTA.B1=1;           //Encendemos display de decenas
0x00A8	0x8280      	BSF         PORTA, 1 
;p2.c,21 :: 		delay_ms(20);         //50T=> 20ms mostrando el valor de unidades
0x00AA	0x0E34      	MOVLW       52
0x00AC	0x6E0C      	MOVWF       R12, 0
0x00AE	0x0EF1      	MOVLW       241
0x00B0	0x6E0D      	MOVWF       R13, 0
L_main12:
0x00B2	0x2E0D      	DECFSZ      R13, 1, 0
0x00B4	0xD7FE      	BRA         L_main12
0x00B6	0x2E0C      	DECFSZ      R12, 1, 0
0x00B8	0xD7FC      	BRA         L_main12
0x00BA	0x0000      	NOP
0x00BC	0x0000      	NOP
;p2.c,22 :: 		PORTA.B1=0;           //Apagamos display de decenas
0x00BE	0x9280      	BCF         PORTA, 1 
;p2.c,13 :: 		for(i=0;i<25;i++){
0x00C0	0x2A15      	INCF        main_i_L0, 1 
;p2.c,23 :: 		}
0x00C2	0xD7CF      	BRA         L_main8
L_main9:
;p2.c,12 :: 		for(u=0;u<10;u++){
0x00C4	0x2A02      	INCF        R2, 1 
;p2.c,25 :: 		}
0x00C6	0xD7C9      	BRA         L_main5
L_main6:
;p2.c,11 :: 		for(d=0;d<6;d++){
0x00C8	0x2A01      	INCF        R1, 1 
;p2.c,27 :: 		}
0x00CA	0xD7C3      	BRA         L_main2
L_main3:
;p2.c,29 :: 		}
0x00CC	0xD7C1      	BRA         L_main0
;p2.c,30 :: 		}
L_end_main:
0x00CE	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C     [180]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    main_d_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0002       [1]    main_u_L0
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    main_i_L0
0x0016      [10]    main_numeros_L0
0x0F80       [1]    PORTA
0x0F83       [1]    PORTD
0x0F92       [1]    TRISA
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
