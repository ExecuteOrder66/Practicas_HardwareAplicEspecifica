;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 03/05/2019 12:28:54
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF45  	GOTO        138
_interrupt:
;p10c.c,11 :: 		void interrupt(){
;p10c.c,12 :: 		if(INTCON.INT0IF){
0x0008	0xA2F2      	BTFSS       INTCON, 1 
0x000A	0xD004      	BRA         L_interrupt1
;p10c.c,13 :: 		valor+=0x10;      //Reducimos frecuencia-> aumentamos periodo
0x000C	0x0E10      	MOVLW       16
0x000E	0x261D      	ADDWF       _valor, 1 
0x0010	0x0E00      	MOVLW       0
0x0012	0x221E      	ADDWFC      _valor+1, 1 
;p10c.c,14 :: 		}
L_interrupt1:
;p10c.c,15 :: 		if(INTCON3.INT1IF){
0x0014	0xA0F0      	BTFSS       INTCON3, 0 
0x0016	0xD004      	BRA         L_interrupt2
;p10c.c,16 :: 		valor -=0x10;     //Aumentamos frecuencia-> reducimos periodo
0x0018	0x0E10      	MOVLW       16
0x001A	0x5E1D      	SUBWF       _valor, 1 
0x001C	0x0E00      	MOVLW       0
0x001E	0x5A1E      	SUBWFB      _valor+1, 1 
;p10c.c,17 :: 		}
L_interrupt2:
;p10c.c,19 :: 		INTCON.INT0IF=0;
0x0020	0x92F2      	BCF         INTCON, 1 
;p10c.c,20 :: 		INTCON3.INT1IF=0;
0x0022	0x90F0      	BCF         INTCON3, 0 
;p10c.c,21 :: 		}
L_end_interrupt:
L__interrupt7:
0x0024	0x0011      	RETFIE      1
; end of _interrupt
_SPI1_Write:
;__Lib_SPI_c345.c,78 :: 		
;__Lib_SPI_c345.c,81 :: 		
0x0026	0xFFC9C01F  	MOVFF       FARG_SPI1_Write_data_, SSPBUF
;__Lib_SPI_c345.c,82 :: 		
L_SPI1_Write8:
0x002A	0xB0C7      	BTFSC       SSPSTAT, 0 
0x002C	0xD002      	BRA         L_SPI1_Write9
;__Lib_SPI_c345.c,83 :: 		
0x002E	0x0000      	NOP
0x0030	0xD7FC      	BRA         L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,84 :: 		
0x0032	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,86 :: 		
L_end_SPI1_Write:
0x0036	0x0012      	RETURN      0
; end of _SPI1_Write
_convertir:
;p10c.c,3 :: 		void convertir(){
;p10c.c,4 :: 		PORTC.B0=0;     //CS a 0 para establecer comunicacion
0x0038	0x9082      	BCF         PORTC, 0 
;p10c.c,5 :: 		SPI1_WRITE(valor>>8);        //Primero el byte alto (Big Endian), se desplaza 8pos a la der. para obtener el byte alto
0x003A	0xF000C01E  	MOVFF       _valor+1, R0
0x003E	0x6A01      	CLRF        R1 
0x0040	0xF01FC000  	MOVFF       R0, FARG_SPI1_Write_data_
0x0044	0xDFF0      	RCALL       _SPI1_Write
;p10c.c,6 :: 		SPI1_WRITE(valor);        //y luego el byte bajo
0x0046	0xF01FC01D  	MOVFF       _valor, FARG_SPI1_Write_data_
0x004A	0xDFED      	RCALL       _SPI1_Write
;p10c.c,7 :: 		delay_us(10);
0x004C	0x0E06      	MOVLW       6
0x004E	0x6E0D      	MOVWF       R13, 0
L_convertir0:
0x0050	0x2E0D      	DECFSZ      R13, 1, 0
0x0052	0xD7FE      	BRA         L_convertir0
0x0054	0x0000      	NOP
;p10c.c,8 :: 		PORTC.B0=1;     //Fin comunicacion, CS a 1
0x0056	0x8082      	BSF         PORTC, 0 
;p10c.c,9 :: 		}
L_end_convertir:
0x0058	0x0012      	RETURN      0
; end of _convertir
_SPI1_Init:
;__Lib_SPI_c345.c,23 :: 		
;__Lib_SPI_c345.c,24 :: 		
0x005A	0x0EFF      	MOVLW       _SPI1_Read
0x005C	0x6E15      	MOVWF       _SPI_Rd_Ptr 
0x005E	0x0EFF      	MOVLW       hi_addr(_SPI1_Read)
0x0060	0x6E16      	MOVWF       _SPI_Rd_Ptr+1 
0x0062	0x0EFF      	MOVLW       FARG_SPI1_Read_buffer
0x0064	0x6E17      	MOVWF       _SPI_Rd_Ptr+2 
0x0066	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Read_buffer)
0x0068	0x6E18      	MOVWF       _SPI_Rd_Ptr+3 
;__Lib_SPI_c345.c,25 :: 		
0x006A	0x0E26      	MOVLW       _SPI1_Write
0x006C	0x6E19      	MOVWF       _SPI_Wr_Ptr 
0x006E	0x0E00      	MOVLW       hi_addr(_SPI1_Write)
0x0070	0x6E1A      	MOVWF       _SPI_Wr_Ptr+1 
0x0072	0x0E1F      	MOVLW       FARG_SPI1_Write_data_
0x0074	0x6E1B      	MOVWF       _SPI_Wr_Ptr+2 
0x0076	0x0E00      	MOVLW       hi_addr(FARG_SPI1_Write_data_)
0x0078	0x6E1C      	MOVWF       _SPI_Wr_Ptr+3 
;__Lib_SPI_c345.c,27 :: 		
0x007A	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;__Lib_SPI_c345.c,28 :: 		
0x007C	0x9694      	BCF         TRISC3_bit, BitPos(TRISC3_bit+0) 
;__Lib_SPI_c345.c,29 :: 		
0x007E	0x8894      	BSF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_SPI_c345.c,31 :: 		
0x0080	0x6AC6      	CLRF        SSPCON1 
;__Lib_SPI_c345.c,32 :: 		
0x0082	0x0E40      	MOVLW       64
0x0084	0x6EC7      	MOVWF       SSPSTAT 
;__Lib_SPI_c345.c,33 :: 		
0x0086	0x8AC6      	BSF         SSPCON1, 5 
;__Lib_SPI_c345.c,35 :: 		
L_end_SPI1_Init:
0x0088	0x0012      	RETURN      0
; end of _SPI1_Init
_main:
;p10c.c,23 :: 		void main() {
;p10c.c,24 :: 		ADCON1=0x87;
0x008A	0x0E87      	MOVLW       135
0x008C	0x6EC1      	MOVWF       ADCON1 
;p10c.c,25 :: 		TRISC=0;
0x008E	0x6A94      	CLRF        TRISC 
;p10c.c,26 :: 		TRISB.B0=1;
0x0090	0x8093      	BSF         TRISB, 0 
;p10c.c,27 :: 		TRISB.B1=1;
0x0092	0x8293      	BSF         TRISB, 1 
;p10c.c,28 :: 		PORTC.B0=1;      //PORTC.B0 conectado al terminal CS del convertidor D/A, Cs a 1, sin comunicacion
0x0094	0x8082      	BSF         PORTC, 0 
;p10c.c,29 :: 		valor=0x3FFF;
0x0096	0x0EFF      	MOVLW       255
0x0098	0x6E1D      	MOVWF       _valor 
0x009A	0x0E3F      	MOVLW       63
0x009C	0x6E1E      	MOVWF       _valor+1 
;p10c.c,30 :: 		INTCON2=0;
0x009E	0x6AF1      	CLRF        INTCON2 
;p10c.c,32 :: 		INTCON.INT0IF=0;   //Interruptor 2
0x00A0	0x92F2      	BCF         INTCON, 1 
;p10c.c,33 :: 		INTCON.INT0IE=1;
0x00A2	0x88F2      	BSF         INTCON, 4 
;p10c.c,35 :: 		INTCON3.INT1IF=0;  //Interruptor 1
0x00A4	0x90F0      	BCF         INTCON3, 0 
;p10c.c,36 :: 		INTCON3.INT1IE=1;
0x00A6	0x86F0      	BSF         INTCON3, 3 
;p10c.c,38 :: 		INTCON.GIE=1;
0x00A8	0x8EF2      	BSF         INTCON, 7 
;p10c.c,39 :: 		SPI1_Init();     //Iniciamos convertidor D/A
0x00AA	0xDFD7      	RCALL       _SPI1_Init
;p10c.c,40 :: 		while(1){
L_main3:
;p10c.c,41 :: 		convertir();
0x00AC	0xDFC5      	RCALL       _convertir
;p10c.c,42 :: 		}
0x00AE	0xD7FE      	BRA         L_main3
;p10c.c,43 :: 		}
L_end_main:
0x00B0	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [30]    _interrupt
0x0026      [18]    _SPI1_Write
0x0038      [34]    _convertir
0x005A      [48]    _SPI1_Init
0x008A      [40]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [4]    _SPI_Rd_Ptr
0x0019       [4]    _SPI_Wr_Ptr
0x001D       [2]    _valor
0x001F       [1]    FARG_SPI1_Write_data_
0x0F82       [1]    PORTC
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC3_bit
0x0FC1       [1]    ADCON1
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC9       [1]    SSPBUF
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
