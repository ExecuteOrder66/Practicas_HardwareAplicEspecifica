;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/03/2019 12:30:13
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF37  	GOTO        110
_interrupt:
;p6c.c,3 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;p6c.c,7 :: 		if(INTCON3.INT1IF && INTCON3.INT1IE){  //Si activamos el interruptor
0x000C	0xA0F0      	BTFSS       INTCON3, 0 
0x000E	0xD012      	BRA         L_interrupt2
0x0010	0xA6F0      	BTFSS       INTCON3, 3 
0x0012	0xD010      	BRA         L_interrupt2
L__interrupt9:
;p6c.c,8 :: 		if(contando==0){  //Si no estamos contando
0x0014	0x5017      	MOVF        _contando, 0 
0x0016	0x0A00      	XORLW       0
0x0018	0xE10C      	BNZ         L_interrupt3
;p6c.c,12 :: 		PORTC.B0=1;  //Ponemos RC0 a nivel alto
0x001A	0x8082      	BSF         PORTC, 0 
;p6c.c,13 :: 		T0CON=0x87;
0x001C	0x0E87      	MOVLW       135
0x001E	0x6ED5      	MOVWF       T0CON 
;p6c.c,14 :: 		TMR0H=(18661>>8);    //Introducimos el alfa inicial;
0x0020	0x0E48      	MOVLW       72
0x0022	0x6ED7      	MOVWF       TMR0H 
;p6c.c,15 :: 		TMR0L= 18661;
0x0024	0x0EE5      	MOVLW       229
0x0026	0x6ED6      	MOVWF       TMR0L 
;p6c.c,16 :: 		INTCON.TMR0IF=0;
0x0028	0x94F2      	BCF         INTCON, 2 
;p6c.c,17 :: 		INTCON.TMR0IE=1;
0x002A	0x8AF2      	BSF         INTCON, 5 
;p6c.c,18 :: 		contando=1;
0x002C	0x0E01      	MOVLW       1
0x002E	0x6E17      	MOVWF       _contando 
;p6c.c,19 :: 		INTCON3.INT1IE=0;
0x0030	0x96F0      	BCF         INTCON3, 3 
;p6c.c,20 :: 		}
L_interrupt3:
;p6c.c,21 :: 		INTCON3.INT1IF=0;
0x0032	0x90F0      	BCF         INTCON3, 0 
;p6c.c,22 :: 		}
L_interrupt2:
;p6c.c,23 :: 		if(INTCON.TMR0IF){
0x0034	0xA4F2      	BTFSS       INTCON, 2 
0x0036	0xD010      	BRA         L_interrupt4
;p6c.c,24 :: 		INTCON.TMR0IF=0;
0x0038	0x94F2      	BCF         INTCON, 2 
;p6c.c,25 :: 		if(temp<0){          //con temp<1 hace 2 temporizaciones, luego para hacer 10 temporizaciones-> temp<9
0x003A	0x0E00      	MOVLW       0
0x003C	0x5C16      	SUBWF       _temp, 0 
0x003E	0xE206      	BC          L_interrupt5
;p6c.c,26 :: 		temp++;
0x0040	0x2A16      	INCF        _temp, 1 
;p6c.c,27 :: 		TMR0H=(18661>>8);    //Reseteamos el alfa inicial;
0x0042	0x0E48      	MOVLW       72
0x0044	0x6ED7      	MOVWF       TMR0H 
;p6c.c,28 :: 		TMR0L= 18661;
0x0046	0x0EE5      	MOVLW       229
0x0048	0x6ED6      	MOVWF       TMR0L 
;p6c.c,30 :: 		}else{            //ya dimos las 10 iteraciones de 6s
0x004A	0xD006      	BRA         L_interrupt6
L_interrupt5:
;p6c.c,31 :: 		temp=0;
0x004C	0x6A16      	CLRF        _temp 
;p6c.c,32 :: 		contando=0;
0x004E	0x6A17      	CLRF        _contando 
;p6c.c,33 :: 		PORTC.B0=0; //RC0 a nivel bajo, temporizacion ya terminada
0x0050	0x9082      	BCF         PORTC, 0 
;p6c.c,34 :: 		T0CON=0x07;
0x0052	0x0E07      	MOVLW       7
0x0054	0x6ED5      	MOVWF       T0CON 
;p6c.c,35 :: 		INTCON3.INT1IE=1;
0x0056	0x86F0      	BSF         INTCON3, 3 
;p6c.c,36 :: 		}
L_interrupt6:
;p6c.c,37 :: 		}
L_interrupt4:
;p6c.c,38 :: 		}
L_end_interrupt:
L__interrupt11:
0x0058	0xF000C015  	MOVFF       21, R0
0x005C	0x0011      	RETFIE      1
; end of _interrupt
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x005E	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0060	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0064	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0066	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0068	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x006A	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x006C	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x006E	0x6A16      	CLRF        _temp 
0x0070	0x6A17      	CLRF        _contando 
;p6c.c,40 :: 		void main() {
;p6c.c,42 :: 		TRISB.B1=1;     //RB1 INPUT
0x0072	0x8293      	BSF         TRISB, 1 
;p6c.c,43 :: 		TRISC.B0=0;     //RC0 OUTPUT
0x0074	0x9094      	BCF         TRISC, 0 
;p6c.c,47 :: 		INTCON3.INT1IF=0;
0x0076	0x90F0      	BCF         INTCON3, 0 
;p6c.c,49 :: 		INTCON2.INTEDG1=0;
0x0078	0x9AF1      	BCF         INTCON2, 5 
;p6c.c,52 :: 		INTCON3.INT1IE=1;
0x007A	0x86F0      	BSF         INTCON3, 3 
;p6c.c,54 :: 		INTCON.GIE=1;
0x007C	0x8EF2      	BSF         INTCON, 7 
;p6c.c,56 :: 		while(1);
L_main7:
0x007E	0xD7FF      	BRA         L_main7
;p6c.c,57 :: 		}
L_end_main:
0x0080	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [86]    _interrupt
0x005E      [16]    ___CC2DW
0x006E      [20]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _temp
0x0017       [1]    _contando
0x0F82       [1]    PORTC
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
